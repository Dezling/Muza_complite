import 'bloc/profile_page_of_friend_container1_bloc.dart';import 'models/profile_page_of_friend_container1_model.dart';import 'package:flutter/material.dart';import 'package:odintsovnicolay69_s_application1/core/app_export.dart';import 'package:odintsovnicolay69_s_application1/presentation/forum_main_page/forum_main_page.dart';import 'package:odintsovnicolay69_s_application1/presentation/profile_page_of_friend_container_page/profile_page_of_friend_container_page.dart';import 'package:odintsovnicolay69_s_application1/widgets/custom_bottom_bar.dart';
// ignore_for_file: must_be_immutable
class ProfilePageOfFriendContainer1Screen extends StatelessWidget {GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<ProfilePageOfFriendContainer1Bloc>(create: (context) => ProfilePageOfFriendContainer1Bloc(ProfilePageOfFriendContainer1State(profilePageOfFriendContainer1ModelObj: ProfilePageOfFriendContainer1Model()))..add(ProfilePageOfFriendContainer1InitialEvent()), child: ProfilePageOfFriendContainer1Screen()); } 
@override Widget build(BuildContext context) { return BlocBuilder<ProfilePageOfFriendContainer1Bloc, ProfilePageOfFriendContainer1State>(builder: (context, state) {return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray50, body: Navigator(key: navigatorKey, initialRoute: AppRoutes.profilePageOfFriendContainerPage, onGenerateRoute: (routeSetting) => PageRouteBuilder(pageBuilder: (ctx, ani, ani1) => getCurrentPage(context, routeSetting.name!), transitionDuration: Duration(seconds: 0))), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));})));}); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Icons8: return AppRoutes.profilePageOfFriendContainerPage; case BottomBarEnum.Icons8961: return "/"; case BottomBarEnum.Video: return "/"; case BottomBarEnum.Raznoe: return AppRoutes.forumMainPage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.profilePageOfFriendContainerPage: return ProfilePageOfFriendContainerPage.builder(context); case AppRoutes.forumMainPage: return ForumMainPage.builder(context); default: return DefaultWidget();} } 
 }
